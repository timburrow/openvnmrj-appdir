#!/bin/bash
#
# A script to list tags in a repository with tag description
# for contributions to OpenVnmrJ
#
# Copyright 2016 Tim Burrow
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# TODO get a list of repos from github? now, just present a list

set -o nounset
#set -e

function showhelp() {
  cat <<-%
Usage: `basename $0` [OPTIONS]
or     `basename $0` -h to show this help

OPTIONS
=======
    -r
      repository to use, if not specified, shows this help. See below.
    -p
      path to directory for repository. Default is ~/vnmrsys/openvnmrj
    -u
      github user name. Default is OpenVnmrJ. See below.
    -H
      use https URL; default is to use ssh URL. See below.
    -h
      show help and exit
    -v
      output list of repositories at end

REPOSITORIES
============
  The repository specified can be one of:
  appdir: contributed application directories
  bin: contributed binaries
  fidlib: contributed FIDs
  imaging: contributions for imaging
  maclib: contributed macros
  psglib: contributed pulse sequences
  shapelib: contributed waveform shapes
  templates: contributed templates
  wtlib: weighting functions
  misc: miscellaneous contributions

GITHUB USERNAME
===============
If the -u option is not used, the repository is 
cloned from OpenVnmrJ.
If you want to fix or add contributions, please fork one of
the repositories on GitHub and specify your username.

HTTPS v SSH URL
===============
The -H option uses https to access GitHub; you may need to enter
your password. 
By default the ssh protocol is used and
keypairs must be set up.

%
}

function installgit() {
  cat <<-%%
Git is required. Please install the latest version:

On Ubuntu:
sudo apt-get install git
OR
sudo apt-add-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git

On RHEL or CentOS:
sudo yum install git

On OS X:
Install Xcode from https://developer.apple.com
or git from http://www.git-scm.com/

then set up your git environment by setting your name and email:
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR EMAIL ADDRESS"

For further information, see:
https://help.github.com/articles/set-up-git/

Please fork the respositories at https://github.com/OpenVnmrJ on GitHub!

%%
}

function badrepo() {
  cat <<-%%
Cannot access the repository ${1} 

Check that the URL above is correct and you have correct permissions.
If the URL starts with ssh, check this URL:
https://help.github.com/articles/generating-ssh-keys/ 
%%
}

function contains() {
  local e
  for e in "${@:2}"; do [[ "${e}" == "${1}" ]] && return 0; done 
  return 1;
}
vusercheck=${vnmruser:-}
if [[ ! -z ${vusercheck} ]]; then
  ovjhome=${vnmruser}/openvnmrj
else
  ovjhome=~/vnmrsys/openvnmrj
fi

# by default clone from OpenVnmrJ, but if user forked, give them the option to clone their fork
githubuser="OpenVnmrJ"
#githubuser="gittim" # local debugging

useHTTPS=0
verbose=0 
repo=

if [[ $? != 0 ]] ; then showhelp; exit 1 ; fi

while getopts “hHr:u:p:v” option; do	
  case $option in
    r)
      # repository to use, if not specified, uses maclib 
      repo=${OPTARG}
      ;;
    p)
      #  path to directory; not in help
      ovjhome=${OPTARG}
      ;;
    u)
      # github user name, expect  
      githubuser=${OPTARG}
      ;;
    h)
      # show help
			showhelp; exit 0 
			;;
    H)
			# use https URL; default is to use ssh URL
			useHTTPS=1 
			;;
    v)
			# verbose: output list at end
			verbose=1 
			;;
    \?) 
			# getopts invalid arg
			echo -e "Invalid option: ${option}\n" 1>&2 
			showhelp; exit 85 
			;; 
  esac
done

repos=( appdir bin fidlib imaging maclib psglib shapelib templates wtlib misc )
contains ${repo} "${repos[@]}" || { echo -e "Cannot find ${repo} in list\n ${repos[@]}"; showhelp ; exit 1; }


# https repo might ask for keys if credential helper is not available
# ssh repo needs keypairs set up
# specify the port because git 1.7.1 is broken and doesn't accept : ??
if (( useHTTPS == 0 )); then
  #repo_url="ssh://${githubuser}@192.168.2.28:22/volume1/git_repos/${repo}.git"
  repo_url="ssh://git@github.com:22/${githubuser}/${repo}.git"
  upstream_repo_url="ssh://git@github.com:22/${githubuser}/${repo}.git"
  #upstream_repo_url="ssh://${githubuser}@192.168.2.28:22/volume1/git_repos/${repo}.git"
else
  repo_url="https://github.com/${githubuser}/${repo}.git"
  upstream_repo_url="https://github.com/OpenVnmrJ/${repo}.git"
fi
  
localbranch="local"
if [[ ${githubuser} == "OpenVnmrJ" ]]; then
  repodir="${ovjhome}/${repo}"
else
  repodir="${ovjhome}/${repo}-${localbranch}"
fi

# check for git
command -v git >/dev/null 2>&1 || { installgit; exit 1; }

# check for git repo
git ls-remote "${repo_url}" >/dev/null 2>&1 || { badrepo "${repo_url}"; exit 1; }

# after repo is here, we'll switch to a local branch to keep master clean
#localbranch="local-$(uname -n)"

echo "Repository will be cloned into ${repodir}"
if [[ -d "${repodir}" ]]; then
  if [[ ! -w "${repodir}" ]]; then
    echo "${repodir} is not writable. Exiting."
    exit 1
  fi
# repo probably exists already, just update
  cd "${repodir}" || { echo "cd ${repodir} failed. Aborting"; exit 1; }
  if [[ -d .git ]]; then
    echo "Updating repository from ${repo_url}"
    git pull origin || { badrepo "${repo_url}"; exit 1; }
    git fetch --all
    git show-ref --verify --quiet refs/heads/"${localbranch}"
    if [[ $? == 0 ]]; then
      git checkout -b ${localbranch}
    else
      git checkout ${localbranch}
    fi
  else
# we have a directory but no repository
    git clone ${repo_url} "${repodir}" . || { badrepo "${repo_url}"; exit 1; }
    git remote add upstream ${upstream_repo_url}
    git fetch --all
    git fetch --tags
    git checkout -b ${localbranch}
  fi
else
  if [[ ! -d "${ovjhome}" ]]; then
    echo "Making OpenVnmrJ directory at ${ovjhome}"
    mkdir -p "${ovjhome}" || { echo "mkdir ${ovjhome} failed. Aborting"; exit 1; }
  fi
  if [[ ! -w "${ovjhome}" ]]; then
    echo "${ovjhome} is not writable. Exiting."
    exit 1
  fi
  cd "${ovjhome}" || { echo "cd ${ovjhome} failed. Aborting"; exit 1; }
  echo "Cloning repository from ${repo_url}"
  git clone ${repo_url} "${repodir}" || { badrepo "${repo_url}"; exit 1; }
  cd "${repodir}"
  git remote add upstream ${upstream_repo_url}
  git fetch --all
  git fetch --tags
  git checkout -b ${localbranch}
fi
# at this point we have a repo in "${repodir}" and on the correct branch
tags=$(git tag -l)

cd "${repodir}"
extractdir=${ovjhome}/.extract
rm -rf ${extractdir}
mkdir ${extractdir}
for tag in ${tags}; do
  printf "%s\n" ${tag} >> ${extractdir}/list
  git --no-pager log  --pretty=format:"%b" ${tag} > ${extractdir}/${tag}
done

if (( $verbose == 1 )); then
  underline="====================================================================="
  for tag in ${tags}; do
    echo -e "\n\n${tag}"
    echo -e "${underline:0:${#tag}}\n"
    git --no-pager log  --pretty=format:"%b" ${tag}
  done
#for b in "`git branch`"; do echo "$b"; done | tr -d "*" | xargs gitk&
#gitk --all &

  echo -e "\n${underline}\n"
  cat <<-%
The contributions of the repository are listed above with tag name and descripton.

To access any contribution, checkout the tag
git checkout name-v1.0

You may also cherry pick a tag to keep multiple contributions
git cherry-pick name-v1.0

If you have any questions, check the README.md file or check online
https://github.com/OpenVnmrJ
http://openvnmrj.org/

%
fi

exit 0
